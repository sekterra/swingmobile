<!--
목적 : v-date-picker기반 datepicker 컴포넌트
Detail :
 * 주의사항 :
  - vee-validate를 사용하여 유효성 검사
  - 여기서는 컴포넌트 자체에서 발생하는 유효성을 검사
  - 부모에서는($validator.validateAll 함수 호출 시) 별도로 추가해야 함
  - 즉, 유효성 검사를 2중 체크를 하고 있으며 이는 나중에 개선해야 할 사항임
examples: 
 *  <YDatepicker 
      label="요청일*"
      name="rqstDt"
      v-model="saveData.workOrder.rqstDt"
      defaultType="today"
      validate-type="required"
      :parentValidateCheck="validateCheck"
      >
    </YDatepicker>
-->
<template>
  <v-menu
    ref="datePickerMenu"
    :close-on-content-click="false"
    v-model="datePickerMenu"
    :nudge-right="40"
    :return-value.sync="date"
    lazy
    transition="scale-transition"
    offset-y
    full-width
    min-width="100px">
    <v-text-field
      slot="activator"
      ref="date"
      v-model="date"
      :label="label"
      prepend-icon="event"
      readonly
      clearable
      :clear-icon-cb="clearValue"
      v-validate="childValidateType"
      :data-vv-name="name"
      :error-messages="errors.collect(name)"
      >
    </v-text-field>
    <v-date-picker
      v-model="date"
      @input="input"
      :name="name"
      :locale="locale"
      no-title
      scrollable
      autosave>
    </v-date-picker>
  </v-menu>
</template>

<script>
export default {
   /* attributes: name, components, props, data */
  name: 'YDatepicker',
  $_veeValidate: {
    validator: 'new'
  },
  props: {
    label: {
      type: String,
      default: '날짜를 선택하세요.'
    },
    locale: {
      type: String,
      default: 'kr-ko'
    },
    name: {
      type: String,
      default: 'date'
    },
    defaultType: {
      type: String,
      default: ''
    },
    childValidateType: {
      type: [String, Object],
      default: null
    },
    // parent에서 유효성 검사를 할 경우 함께 검사 할 수 있도록 하기 위한 속성(단순 증가값)
    parentValidateCheck: {
      type: Number,
      default: 0
    }
  },
  data() {
    return {
      datePickerMenu: null,
      date: null
    }
  },
  watch: {
    parentValidateCheck() {
      // vee-validate로 유효성 검사
      this.$validator.validateAll()
    }
  },
  /* Vue lifecycle: created, mounted, destroyed, etc */
  mounted() {
    if (this.defaultType === 'today') {
        this.date = this.$comm.getToday()
        // this.$refs.date.value = this.date
        this.$emit('input', this.date);
    }
  },
  /* methods */
  methods: {
    input() {
      try {
        this.$refs.datePickerMenu.save(this.date);
        this.$emit('input', this.date);
      } catch (e) {
        window.alert(e.message);
      }
    },
    /**
     * delete icon 클릭시 값 초기화
     */
    clearValue() {
      this.date = null
      this.$refs.datePickerMenu.save(this.date);
      this.$emit('input', this.date);
    }
  }
}
</script>

